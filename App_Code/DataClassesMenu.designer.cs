#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.34014
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aspnet-2015nfpAzure-20140206163312")]
public partial class DataClassesMenuDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Definizioni metodo Extensibility
  partial void OnCreated();
  partial void InsertMenu(Menu instance);
  partial void UpdateMenu(Menu instance);
  partial void DeleteMenu(Menu instance);
  partial void InsertNav(Nav instance);
  partial void UpdateNav(Nav instance);
  partial void DeleteNav(Nav instance);
  #endregion
	
	public DataClassesMenuDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["aspnet_2015nfpAzure_20140206163312ConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesMenuDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesMenuDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesMenuDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesMenuDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Menu> Menu
	{
		get
		{
			return this.GetTable<Menu>();
		}
	}
	
	public System.Data.Linq.Table<Nav> Nav
	{
		get
		{
			return this.GetTable<Nav>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _IdNav;
	
	private string _TxtSubMenu;
	
	private int _IdPagina;
	
	private bool _Pubblica;
	
	private EntitySet<Nav> _Nav;
	
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdNavChanging(int value);
    partial void OnIdNavChanged();
    partial void OnTxtSubMenuChanging(string value);
    partial void OnTxtSubMenuChanged();
    partial void OnIdPaginaChanging(int value);
    partial void OnIdPaginaChanged();
    partial void OnPubblicaChanging(bool value);
    partial void OnPubblicaChanged();
    #endregion
	
	public Menu()
	{
		this._Nav = new EntitySet<Nav>(new Action<Nav>(this.attach_Nav), new Action<Nav>(this.detach_Nav));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNav", DbType="Int NOT NULL")]
	public int IdNav
	{
		get
		{
			return this._IdNav;
		}
		set
		{
			if ((this._IdNav != value))
			{
				this.OnIdNavChanging(value);
				this.SendPropertyChanging();
				this._IdNav = value;
				this.SendPropertyChanged("IdNav");
				this.OnIdNavChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxtSubMenu", DbType="NChar(30) NOT NULL", CanBeNull=false)]
	public string TxtSubMenu
	{
		get
		{
			return this._TxtSubMenu;
		}
		set
		{
			if ((this._TxtSubMenu != value))
			{
				this.OnTxtSubMenuChanging(value);
				this.SendPropertyChanging();
				this._TxtSubMenu = value;
				this.SendPropertyChanged("TxtSubMenu");
				this.OnTxtSubMenuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPagina", DbType="Int NOT NULL")]
	public int IdPagina
	{
		get
		{
			return this._IdPagina;
		}
		set
		{
			if ((this._IdPagina != value))
			{
				this.OnIdPaginaChanging(value);
				this.SendPropertyChanging();
				this._IdPagina = value;
				this.SendPropertyChanged("IdPagina");
				this.OnIdPaginaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pubblica", DbType="Bit NOT NULL")]
	public bool Pubblica
	{
		get
		{
			return this._Pubblica;
		}
		set
		{
			if ((this._Pubblica != value))
			{
				this.OnPubblicaChanging(value);
				this.SendPropertyChanging();
				this._Pubblica = value;
				this.SendPropertyChanged("Pubblica");
				this.OnPubblicaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Nav", Storage="_Nav", ThisKey="IdNav", OtherKey="Id")]
	public EntitySet<Nav> Nav
	{
		get
		{
			return this._Nav;
		}
		set
		{
			this._Nav.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Nav(Nav entity)
	{
		this.SendPropertyChanging();
		entity.Menu = this;
	}
	
	private void detach_Nav(Nav entity)
	{
		this.SendPropertyChanging();
		entity.Menu = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nav")]
public partial class Nav : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _IdLingua;
	
	private string _TxtMenu;
	
	private string _Link;
	
	private bool _Pubblica;
	
	private EntityRef<Menu> _Menu;
	
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdLinguaChanging(System.Nullable<int> value);
    partial void OnIdLinguaChanged();
    partial void OnTxtMenuChanging(string value);
    partial void OnTxtMenuChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnPubblicaChanging(bool value);
    partial void OnPubblicaChanged();
    #endregion
	
	public Nav()
	{
		this._Menu = default(EntityRef<Menu>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				if (this._Menu.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLingua", DbType="Int")]
	public System.Nullable<int> IdLingua
	{
		get
		{
			return this._IdLingua;
		}
		set
		{
			if ((this._IdLingua != value))
			{
				this.OnIdLinguaChanging(value);
				this.SendPropertyChanging();
				this._IdLingua = value;
				this.SendPropertyChanged("IdLingua");
				this.OnIdLinguaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxtMenu", DbType="NChar(30)")]
	public string TxtMenu
	{
		get
		{
			return this._TxtMenu;
		}
		set
		{
			if ((this._TxtMenu != value))
			{
				this.OnTxtMenuChanging(value);
				this.SendPropertyChanging();
				this._TxtMenu = value;
				this.SendPropertyChanged("TxtMenu");
				this.OnTxtMenuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NChar(20)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pubblica", DbType="Bit NOT NULL")]
	public bool Pubblica
	{
		get
		{
			return this._Pubblica;
		}
		set
		{
			if ((this._Pubblica != value))
			{
				this.OnPubblicaChanging(value);
				this.SendPropertyChanging();
				this._Pubblica = value;
				this.SendPropertyChanged("Pubblica");
				this.OnPubblicaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Nav", Storage="_Menu", ThisKey="Id", OtherKey="IdNav", IsForeignKey=true)]
	public Menu Menu
	{
		get
		{
			return this._Menu.Entity;
		}
		set
		{
			Menu previousValue = this._Menu.Entity;
			if (((previousValue != value) 
						|| (this._Menu.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Menu.Entity = null;
					previousValue.Nav.Remove(this);
				}
				this._Menu.Entity = value;
				if ((value != null))
				{
					value.Nav.Add(this);
					this._Id = value.IdNav;
				}
				else
				{
					this._Id = default(int);
				}
				this.SendPropertyChanged("Menu");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
